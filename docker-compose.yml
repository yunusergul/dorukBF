version: '3.8'

services:
  backend:
    build:
      context: ./backend/netCore
      dockerfile: Dockerfile.dev
      args:
        BACKEND_PORT: ${BACKEND_PORT}
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
        DOTNET_USE_POLLING_FILE_WATCHER: ${DOTNET_USE_POLLING_FILE_WATCHER}
        DOTNET_WATCH_RESTART_ON_RUDE_EDIT: ${DOTNET_WATCH_RESTART_ON_RUDE_EDIT}
        ASPNETCORE_URLS: ${ASPNETCORE_URLS}
    volumes:
      - ./backend/netCore:/app
      - /app/obj
      - /app/bin
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    env_file:
      - ./.env

  frontend:
    build:
      context: ./frontend/angular
      dockerfile: Dockerfile.dev
      args:
        FRONTEND_PORT: ${FRONTEND_PORT}
        HOST: ${HOST}
        POLL_INTERVAL: ${POLL_INTERVAL}
    volumes:
      - ./frontend/angular:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      NODE_ENV: ${NODE_ENV}
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING}
    env_file:
      - ./.env

  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}:${NGINX_INTERNAL_PORT}"
    volumes:
      - ./nginx.conf.template:/etc/nginx/conf.d/default.conf.template
      - ./entrypoint.sh:/entrypoint.sh
    depends_on:
      - backend
      - frontend
    env_file:
      - ./.env
    entrypoint: ["/bin/sh", "/entrypoint.sh"]

networks:
  default:
    driver: bridge
